setView(
0,0,
# data[,"Lon"][1],
# data[,"Lat"][1],
zoom=3) %>%
addTiles(custom_tile) %>%
addCircleMarkers(
lon,
lat,
radius = 5,
stroke = TRUE,
weight = 1,
opacity = 0.3,
color = colv,
fillColor = colv,
fillOpacity = 0.3,
label = data$timelineObjects.placeVisit.location.name,
popup = c(lat,lon)
)
lat
colv <- "#F90F40"
leaflet() %>%
setView(
0,0,
# data[,"Lon"][1],
# data[,"Lat"][1],
zoom=3) %>%
addTiles(custom_tile) %>%
addCircleMarkers(
lon,
lat,
radius = 5,
stroke = TRUE,
weight = 1,
opacity = 0.3,
color = colv,
fillColor = colv,
fillOpacity = 0.3,
label = data$timelineObjects.placeVisit.location.name,
popup = paste0(lat,lon)
)
colv <- "#F90F40"
leaflet() %>%
setView(
0,0,
# data[,"Lon"][1],
# data[,"Lat"][1],
zoom=3) %>%
addTiles(custom_tile) %>%
addCircleMarkers(
lon,
lat,
radius = 5,
stroke = TRUE,
weight = 1,
opacity = 0.3,
color = colv,
fillColor = colv,
fillOpacity = 0.3,
label = data$timelineObjects.placeVisit.location.name,
popup = paste0("Lat: " lat, "Lon": lon)
)
colv <- "#F90F40"
leaflet() %>%
setView(
0,0,
# data[,"Lon"][1],
# data[,"Lat"][1],
zoom=3) %>%
addTiles(custom_tile) %>%
addCircleMarkers(
lon,
lat,
radius = 5,
stroke = TRUE,
weight = 1,
opacity = 0.3,
color = colv,
fillColor = colv,
fillOpacity = 0.3,
label = data$timelineObjects.placeVisit.location.name,
popup = paste0("Lat: ", lat, "Lon:", lon)
)
long <- c(147.5, 147.5, 147.5, 147, 147)
lat <- c(-36.5, -36.5, -36.5, -36, -36)
label <- c(1, 1, 2, 1, 2)
markers <- data.frame(lat,long,label)
markers <- aggregate(label ~ lat + long, markers, paste, collapse = "<br/>")
markers
leaflet() %>%
addTiles() %>%
addMarkers(lng=markers$long, lat= markers$lat,
popup= markers$label
)
require(leaflet)
require(dplyr)
require(geosphere)
require(htmltools)
setview <- c(7.369722,12.354722)
mp <- data.frame(
"name" = c("Melbourne","Atlanta"),
"lat" = c(-37.813629,33.748997),
"lon" = c(144.963058,-84.387985)
)
latlon_matrix <- matrix(c(mp[,"lon"],mp[,"lat"]),ncol=2)
custom_tile <- "http://a.sm.mapstack.stamen.com/(positron,(mapbox-water,$776699[hsl-color]),(buildings,$002bff[hsl-color]),(parks,$6abb9d[hsl-color]))/{z}/{x}/{y}.png"
colv <- "#4C3661"
opac <- 0.5
site_names <- mp$name
ttl <- "Debunking Flat Earth theory 101"
weblink <- "https://github.com/darwinanddavis" # weblink
webname <- "My github"
href <- paste0("<b><a href=",weblink,">",webname,"</a></b>")
text_label <- paste(sep = "<br/>",
href,
"606 5th Ave. S",
"Seattle, WA 98138"
)
# label options
marker_label_opt <- labelOptions(textsize = "20px",opacity = 0.5,offset = c(0,0))
text_label_opt <- markerOptions(noHide = T, direction = 'top', textOnly = T, opacity = 1,offset = c(0,0))
# title
tag.map.title <- tags$style(
HTML(".leaflet-control.map-title {
transform: translate(-50%,20%);
position: fixed !important;
left: 50%;
text-align: center;
padding-left: 10px;
padding-right: 10px;
background: white; opacity: 0.7;
font-weight: bold;
font-size: 25px;
}"
))
title <- tags$div(
tag.map.title, HTML(ttl)
)
# add more text
subtext <- "Some text, any location"
tag.map.text <- tags$style(
HTML(".leaflet-control.map-text {
transform: translate(-5%,90%);
position: fixed !important;
left: 50%;
text-align: center;
padding-left: 10px;
padding-right: 10px;
background: white; opacity: 1;
font-weight: italic;
font-size: 5px;
}"
))
subtitle <- tags$div(
tag.map.text, HTML(subtext)
)
# map
map <- gcIntermediate(latlon_matrix[1,],
latlon_matrix[2,],
n=100,
addStartEnd=T,
sp=T) %>%
leaflet() %>%
setView(setview[2],setview[1],zoom=3) %>%
addTiles(custom_tile) %>%
addCircleMarkers(mp[,"lon"],
mp[,"lat"],
radius = 10,
stroke = TRUE,
weight = 3,
opacity = opac,
color = colv,
fillColor = colv,
label=paste(site_names),
labelOptions = marker_label_opt
) %>%
addPolylines(
color = colv,
opacity = opac) %>%
addPopups(-122.327298, 47.597131, text_label,
options = popupOptions(closeButton = FALSE, textOnly = T)
) %>%
addLabelOnlyMarkers(setview[2], setview[1], label = text_label,
options = text_label_opt) %>%
addControl("@darwinanddavis", position = "topright") %>%
addControl(title, position = "topleft", className="map-title") %>%
addControl(subtitle, position="topleft",className = "map-text")
map
# save_html(map,"flatearth_2.html")
#
amdam[is.na(amdam)] <- 1 # turn nas into 1
amdam <- read.csv("amdam.csv",header=T,sep=",",stringsAsFactors = T)
amdam[is.na(amdam)] <- 1 # turn nas into 1
avail_30 <- amdam %>% dplyr::filter(amdam$availability_30 > 1)
avail_60 <- amdam %>% dplyr::filter(amdam$availability_60 > 1)
avail_90 <- amdam %>% dplyr::filter(amdam$availability_90 > 1)
require(leaflet)
map <- leaflet() %>%
setView(amdam[1,"longitude"],amdam[1,"latitude"],zoom=12) %>%
addTiles() %>%
addCircleMarkers(avail_30[,"longitude"],
avail_30[,"latitude"],
radius = avail_30$review_scores_cleanliness/20,
stroke = TRUE,
weight = 3,
opacity = 0.5,
color = "lightblue",
fillColor = "lightblue",
label=site_names,
popup=site_names) %>%
addCircleMarkers(avail_60[,"longitude"],
avail_60[,"latitude"],
radius = avail_60$review_scores_cleanliness/20,
stroke = TRUE,
weight = 3,
opacity = 0.5,
color = "pink",
fillColor = "pink",
label=site_names,
popup=site_names) %>%
addProviderTiles("CartoDB.DarkMatter")
map
require(leaflet)
require(dplyr)
require(geosphere)
require(htmltools)
setview <- c(7.369722,12.354722)
mp <- data.frame(
"name" = c("Melbourne","Atlanta"),
"lat" = c(-37.813629,33.748997),
"lon" = c(144.963058,-84.387985)
)
latlon_matrix <- matrix(c(mp[,"lon"],mp[,"lat"]),ncol=2)
custom_tile <- "http://a.sm.mapstack.stamen.com/(positron,(mapbox-water,$776699[hsl-color]),(buildings,$002bff[hsl-color]),(parks,$6abb9d[hsl-color]))/{z}/{x}/{y}.png"
colv <- "#4C3661"
opac <- 0.5
site_names <- mp$name
ttl <- "Debunking Flat Earth theory 101"
weblink <- "https://github.com/darwinanddavis" # weblink
webname <- "My github"
href <- paste0("<b><a href=",weblink,">",webname,"</a></b>")
text_label <- paste(sep = "<br/>",
href,
"606 5th Ave. S",
"Seattle, WA 98138"
)
# label options
marker_label_opt <- labelOptions(textsize = "20px",opacity = 0.5,offset = c(0,0))
text_label_opt <- markerOptions(noHide = T, direction = 'top', textOnly = T, opacity = 1,offset = c(0,0))
# title
tag.map.title <- tags$style(
HTML(".leaflet-control.map-title {
transform: translate(-50%,20%);
position: fixed !important;
left: 50%;
text-align: center;
padding-left: 10px;
padding-right: 10px;
background: white; opacity: 0.7;
font-weight: bold;
font-size: 25px;
}"
))
title <- tags$div(
tag.map.title, HTML(ttl)
)
# add more text
subtext <- "Some text, any location"
tag.map.text <- tags$style(
HTML(".leaflet-control.map-text {
transform: translate(-5%,90%);
position: fixed !important;
left: 50%;
text-align: center;
padding-left: 10px;
padding-right: 10px;
background: white; opacity: 1;
font-weight: italic;
font-size: 5px;
}"
))
subtitle <- tags$div(
tag.map.text, HTML(subtext)
)
# map
map <- gcIntermediate(latlon_matrix[1,],
latlon_matrix[2,],
n=100,
addStartEnd=T,
sp=T) %>%
leaflet() %>%
setView(setview[2],setview[1],zoom=3) %>%
addTiles(custom_tile) %>%
addCircleMarkers(mp[,"lon"],
mp[,"lat"],
radius = 10,
stroke = TRUE,
weight = 3,
opacity = opac,
color = colv,
fillColor = colv,
label=paste(site_names),
labelOptions = marker_label_opt
) %>%
addPolylines(
color = colv,
opacity = opac) %>%
addPopups(-122.327298, 47.597131, text_label,
options = popupOptions(closeButton = FALSE, textOnly = T)
) %>%
addLabelOnlyMarkers(setview[2], setview[1], label = text_label,
options = text_label_opt) %>%
addControl("@darwinanddavis", position = "topright") %>%
addControl(title, position = "topleft", className="map-title") %>%
addControl(subtitle, position="topleft",className = "map-text")
map
# save_html(map,"flatearth_2.html")
#
map
require(leaflet)
map <- leaflet() %>%
setView(amdam[1,"longitude"],amdam[1,"latitude"],zoom=12) %>%
addTiles() %>%
addCircleMarkers(avail_30[,"longitude"],
avail_30[,"latitude"],
radius = avail_30$review_scores_cleanliness/20,
stroke = TRUE,
weight = 3,
opacity = 0.5,
color = "lightblue",
fillColor = "lightblue",
label=site_names,
popup=site_names) %>%
addCircleMarkers(avail_60[,"longitude"],
avail_60[,"latitude"],
radius = avail_60$review_scores_cleanliness/20,
stroke = TRUE,
weight = 3,
opacity = 0.5,
color = "pink",
fillColor = "pink",
label=site_names,
popup=site_names) %>%
addProviderTiles("CartoDB.DarkMatter")
map
require(maps)
head(world.cities)
world.cities %>% str
require(maps)
world.cities %>% str
latlon
world.cities$country.etc
world.cities %>% str
names(world.cities$country.etc) <- "country"
world.cities %>% str
setNames(world.cities$country.etc, "country")
world.cities %>% str
world.cities$country.etc <- setNames(world.cities$country.etc, "country")
world.cities %>% str
world_cities <- with(world.cities, data.frame(
"City" = name,
"Country" = country.etc,
"lat" = lat,
"lon" = long,
"population" = pop
)
)
world_cities %>% str
world_cities <- with(world.cities, data.frame(
"city" = name,
"country" = country.etc,
"lat" = lat,
"lon" = long,
"population" = pop
)
)
world_cities %>% str
require(leaflet)
latlon <- world_cities[,c("lat","lon")]
custom_tile <- "http://d.sm.mapstack.stamen.com/(positron,(parks,$3bcdd5[hsl-color]),(streets-and-labels,$e2d2f0[hsl-color]),(buildings,$e2d2f0[hsl-color]))/{z}/{x}/{y}.png"
radius <- world_cities[,"population"]/10000
radius %>% unique
names
popup <- world_cities[,"country"]
labels
city_names <- world_cities[,"city"]
country_names <- world_cities[,"country"]
country_names <- world_cities[,"country"]
population <- world_cities[,"population"]/10000
label
popup
radius <- world_cities[,"population"]/10000
label <- world_cities[,"city"]
popup <- world_cities[,"country"]
map <- leaflet() %>%
addTiles(custom_tile) %>%
setView(0,0,zoom=12) %>%
addCircleMarkers(latlon[2],latlon[1],
radius = radius,
stroke = TRUE,
weight = 3,
opacity = opac,
color = colv,
fillColor = colv,
label = label,
popup = popup
)
latlon[2]
radius %>% str
mp[,"lon"]
latlon[2]
map <- leaflet() %>%
addTiles(custom_tile) %>%
setView(0,0,zoom=12) %>%
addCircleMarkers(latlon[2],latlon[1],
radius = radius,
stroke = TRUE,
weight = 3,
opacity = opac,
color = colv,
fillColor = colv,
label = label,
popup = popup
)
latlon[2] %>% class
latlon[2][1]
latlon[2][1] %>% class
map <- leaflet() %>%
addTiles(custom_tile) %>%
setView(0,0,zoom=12) %>%
addCircleMarkers(latlon[,"lon"],
latlon[,"lat"],
radius = radius,
stroke = TRUE,
weight = 3,
opacity = opac,
color = colv,
fillColor = colv,
label = label,
popup = popup
)
map
map <- leaflet() %>%
setView(0,0,zoom=12) %>%
addTiles(custom_tile) %>%
addCircleMarkers(latlon[,"lon"],
latlon[,"lat"],
radius = radius,
stroke = TRUE,
weight = 3,
opacity = opac,
color = colv,
fillColor = colv,
label = label,
popup = popup
)
map
map <- leaflet() %>%
setView(0,0,zoom=12) %>%
addTiles(custom_tile)
map
map <- leaflet() %>%
setView(0,0,zoom=3) %>%
addTiles(custom_tile) %>%
addCircleMarkers(latlon[,"lon"],
latlon[,"lat"],
radius = radius,
stroke = TRUE,
weight = 3,
opacity = opac,
color = colv,
fillColor = colv,
label = label,
popup = popup
)
map
custom_tile <- "http://d.sm.mapstack.stamen.com/((darkmatter,$00ffff[hsl-color]),(mapbox-water,$00589c[hsl-color]),(parks,$ff9a30[source-in]))/{z}/{x}/{y}.png"
leaflet() %>%
setView(0,0,zoom=3) %>%
addTiles(custom_tile)
leaflet() %>%
setView(0,0,zoom=3) %>%
addTiles(custom_tile) %>%
addCircleMarkers(latlon[,"lon"],
latlon[,"lat"],
radius = radius,
stroke = TRUE,
weight = 3,
opacity = opac,
color = colv,
fillColor = colv,
label = label,
popup = popup
)
radius %>% max
radius <- world_cities[,"population"]/1000000
radius %>% max
map <- leaflet() %>%
setView(0,0,zoom=3) %>%
addTiles(custom_tile) %>%
addCircleMarkers(latlon[,"lon"],
latlon[,"lat"],
radius = radius,
stroke = TRUE,
weight = 3,
opacity = opac,
color = colv,
fillColor = colv,
label = label,
popup = popup
)
map
